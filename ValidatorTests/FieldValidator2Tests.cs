using Battleships;
using NUnit.Framework;

namespace ValidatorTests
{
    [TestFixture]
    public class FieldValidator2Tests
    {
        //Cases for different ruleset: Adjacent ships are allowed

        [Test]
        public void TestCase()
        {
            int[,] field =
                {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {1, 0, 1, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.IsTrue(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase1()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {1, 0, 1, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 1, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase2()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {1, 0, 1, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase3()
        {
            int[,] field =
                    {{0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {0, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 1, 0, 1, 1, 1, 0, 1, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase4()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 1, 0, 0, 0, 0, 0, 0, 1, 0},
                 {1, 1, 0, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.IsTrue(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase5()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 1, 0, 0, 0, 0, 0, 0, 1, 0},
                 {1, 1, 0, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.IsTrue(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase6()
        {
            int[,] field =
                    {{1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
                 {1, 1, 0, 0, 0, 0, 0, 0, 1, 0},
                 {1, 1, 0, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.IsTrue(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase7()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                 {1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {1, 1, 0, 0, 1, 1, 1, 0, 1, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 1, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase8()
        {
            int[,] field =
                    {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {1, 0, 1, 0, 1, 1, 1, 0, 1, 0},
                 {1, 0, 1, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 1, 1, 1, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                 {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase9()
        {
            int[,] field =
                    {{1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.IsTrue(FieldValidator.ValidateField(field));
        }

        [Test]
        public void TestCase10()
        {
            int[,] field =
                    {{0, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
                 {0, 1, 1, 1, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
                 {0, 1, 1, 1, 0, 1, 1, 0, 0, 0},
                 {0, 1, 0, 0, 0, 0, 1, 1, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
            Assert.False(FieldValidator.ValidateField(field));
        }

    }
}